using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Principal;
using System.Text;
using System.Windows.Forms;

namespace RykonServer
{
    public static    class Extended{
     public static bool BiggerThan_orEQ(this int i, int va)
     {
         return (i >= va);

     }
     public static bool SmallerThan_orEQ(this int i, int va)
     {
         return (i <= va);

     }
     public static bool BiggerThan(this int i, int va)
     {
         return (i > va);

     }
     public static bool SmallerThan(this int i, int va)
     {
         return (i < va);

     }
 }
    public class AppHelper
    {
        public static long FileSize(string fpath)
        {
            try
            {
                return new System.IO.FileInfo(fpath).Length;

            }
            catch { }

            return 0;
        }
     
        public static void SetStartup(string AppName, bool enable)
        {
            RegistryKey rk = Registry.CurrentUser.OpenSubKey
                ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);

            if (enable)
                rk.SetValue(AppName, Application.ExecutablePath.ToString());
            else
                rk.DeleteValue(AppName, false);
            var t = (rk.GetValue("Rykon"));

        }
        public static bool IsRunningAtStartUp()
        {
            RegistryKey rk = Registry.CurrentUser.OpenSubKey
              ("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);

            return  !string.IsNullOrEmpty((rk.GetValue("Rykon")).ToString());
        }
  
         public static bool IsUserAdministrator()
        {
            bool isAdmin;
            try
            {
                WindowsIdentity user = WindowsIdentity.GetCurrent();
                WindowsPrincipal principal = new WindowsPrincipal(user);
                isAdmin = principal.IsInRole(WindowsBuiltInRole.Administrator);
            }
            catch (UnauthorizedAccessException ex)
            {
                isAdmin = false;
            }
            catch (Exception ex)
            {
                isAdmin = false;
            }
            return isAdmin;
        }
        public static void RepairPath(string path,bool lastChildIsDir=false)
        {
            // D:\\x\1\2\3\4
            // D:       x       1       2       3       4
            try
            {
                char sep = ((path.Contains("\\") ? ('\\') : ('/')));
                string[] seps = path.Split(sep);
                string fath = seps[0];
                for (int i = 1; i < ((lastChildIsDir) ? (seps.Length) : (seps.Length - 1)); i++)
                {
                    if (string.IsNullOrEmpty(seps[i]))
                        continue;
                    fath += "\\" + seps[i];
                    if (System.IO.Directory.Exists(fath))
                        continue;

                    System.IO.Directory.CreateDirectory(fath);
                }
            }
            catch { }


        }
        public static byte[] HowToRunAsAdminBytes = new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 1, 137, 0, 0, 0, 110, 8, 2, 0, 0, 0, 93, 137, 120, 100, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 25, 142, 73, 68, 65, 84, 120, 94, 237, 157, 11, 84, 20, 87, 154, 128, 251, 100, 207, 238, 217, 157, 49, 129, 85, 199, 108, 118, 215, 28, 227, 28, 199, 49, 25, 51, 137, 8, 25, 102, 220, 25, 207, 228, 185, 187, 113, 103, 66, 72, 54, 154, 24, 57, 206, 114, 206, 76, 18, 118, 99, 50, 38, 58, 147, 24, 131, 10, 26, 21, 133, 36, 106, 76, 20, 4, 77, 136, 224, 179, 163, 49, 19, 149, 135, 242, 80, 228, 45, 161, 81, 64, 180, 109, 228, 161, 77, 243, 234, 6, 108, 166, 247, 86, 221, 170, 234, 91, 143, 126, 80, 93, 85, 93, 221, 252, 117, 238, 225, 220, 186, 247, 127, 221, 159, 254, 63, 238, 45, 160, 219, 224, 132, 11, 50, 0, 25, 128, 12, 232, 47, 3, 6, 253, 133, 4, 17, 65, 6, 32, 3, 144, 1, 39, 143, 77, 195, 35, 183, 191, 174, 48, 111, 62, 112, 241, 221, 236, 42, 104, 144, 1, 200, 0, 100, 32, 136, 25, 224, 177, 233, 96, 73, 219, 161, 50, 243, 149, 174, 161, 238, 129, 81, 104, 144, 1, 200, 0, 100, 32, 136, 25, 224, 177, 105, 205, 23, 181, 237, 61, 206, 182, 91, 206, 230, 110, 94, 171, 104, 234, 56, 114, 178, 244, 139, 3, 198, 220, 47, 243, 81, 67, 29, 116, 139, 6, 5, 98, 112, 11, 25, 128, 12, 64, 6, 148, 202, 0, 143, 77, 104, 255, 214, 213, 63, 122, 185, 203, 201, 181, 70, 139, 227, 88, 81, 229, 151, 251, 114, 141, 235, 214, 21, 36, 36, 148, 46, 88, 80, 182, 96, 65, 225, 146, 37, 199, 215, 174, 221, 191, 47, 247, 120, 81, 37, 18, 32, 229, 161, 15, 25, 128, 12, 64, 6, 20, 201, 128, 4, 155, 154, 58, 157, 184, 53, 92, 119, 28, 60, 81, 124, 120, 219, 246, 147, 79, 63, 93, 49, 125, 122, 243, 140, 25, 109, 211, 167, 183, 222, 115, 15, 234, 92, 152, 58, 181, 224, 169, 167, 142, 126, 188, 237, 208, 55, 103, 144, 24, 167, 2, 29, 200, 0, 100, 0, 50, 160, 72, 6, 68, 108, 234, 27, 109, 234, 112, 226, 118, 244, 116, 197, 129, 143, 183, 125, 61, 119, 110, 225, 204, 153, 165, 177, 177, 133, 243, 231, 127, 251, 196, 19, 127, 121, 234, 169, 130, 5, 11, 74, 126, 254, 243, 242, 105, 211, 78, 207, 153, 115, 228, 195, 143, 140, 167, 209, 241, 142, 81, 129, 14, 100, 0, 50, 0, 25, 80, 36, 3, 66, 54, 117, 246, 141, 54, 118, 56, 81, 59, 219, 208, 190, 103, 119, 246, 241, 39, 159, 60, 48, 109, 218, 87, 91, 182, 92, 56, 117, 170, 177, 174, 238, 202, 149, 43, 102, 179, 185, 173, 181, 181, 190, 180, 244, 244, 242, 229, 167, 239, 190, 251, 219, 199, 31, 223, 187, 59, 27, 9, 99, 45, 182, 25, 159, 55, 184, 175, 231, 63, 39, 167, 4, 98, 177, 43, 203, 61, 205, 250, 61, 254, 121, 34, 235, 44, 113, 39, 47, 12, 191, 45, 248, 161, 181, 115, 177, 225, 225, 100, 147, 123, 141, 200, 233, 98, 35, 117, 75, 121, 151, 92, 133, 105, 229, 92, 28, 151, 138, 81, 241, 211, 174, 228, 122, 193, 50, 145, 1, 203, 222, 53, 73, 248, 202, 40, 226, 39, 185, 40, 51, 105, 71, 117, 99, 135, 148, 0, 154, 194, 215, 154, 19, 101, 228, 11, 204, 163, 10, 103, 36, 243, 24, 39, 79, 25, 73, 221, 219, 64, 56, 245, 100, 182, 225, 196, 106, 198, 159, 200, 163, 196, 84, 117, 6, 35, 204, 55, 78, 249, 229, 166, 144, 4, 55, 75, 15, 82, 43, 229, 45, 191, 236, 64, 170, 48, 60, 63, 74, 201, 231, 75, 235, 216, 14, 202, 151, 144, 77, 55, 122, 71, 27, 110, 56, 81, 203, 61, 94, 156, 251, 238, 170, 191, 76, 153, 114, 234, 167, 63, 189, 84, 91, 235, 24, 30, 182, 219, 237, 253, 253, 253, 189, 189, 189, 131, 168, 231, 112, 116, 118, 118, 22, 197, 197, 157, 156, 52, 233, 224, 159, 223, 249, 242, 120, 49, 214, 98, 155, 241, 57, 67, 236, 138, 82, 250, 118, 31, 42, 221, 196, 29, 188, 89, 41, 49, 105, 1, 210, 166, 135, 126, 105, 218, 67, 156, 253, 210, 180, 21, 251, 252, 80, 145, 231, 11, 45, 228, 37, 35, 183, 198, 29, 47, 25, 158, 219, 103, 90, 129, 232, 243, 82, 162, 123, 177, 132, 229, 175, 223, 143, 197, 242, 92, 135, 159, 34, 213, 226, 148, 183, 58, 208, 242, 146, 129, 194, 19, 57, 23, 233, 239, 87, 33, 34, 69, 166, 209, 45, 105, 201, 73, 78, 165, 166, 196, 2, 23, 17, 41, 232, 41, 161, 89, 143, 42, 103, 243, 83, 81, 65, 34, 121, 182, 131, 36, 81, 137, 102, 166, 147, 118, 60, 154, 117, 54, 80, 83, 100, 108, 132, 107, 209, 148, 113, 71, 210, 234, 124, 11, 179, 162, 228, 19, 103, 121, 65, 86, 115, 30, 169, 72, 152, 89, 106, 112, 53, 94, 172, 91, 24, 13, 82, 252, 146, 90, 102, 0, 47, 111, 20, 109, 114, 102, 122, 114, 170, 144, 77, 237, 182, 209, 122, 139, 19, 181, 29, 89, 185, 7, 22, 45, 42, 140, 136, 40, 153, 49, 163, 100, 215, 174, 30, 171, 117, 192, 110, 255, 110, 215, 174, 202, 248, 248, 250, 188, 188, 254, 129, 129, 190, 129, 129, 243, 175, 188, 82, 52, 97, 194, 87, 47, 188, 176, 115, 207, 151, 88, 139, 109, 20, 155, 222, 46, 193, 183, 100, 159, 148, 241, 62, 37, 144, 244, 124, 155, 147, 104, 136, 74, 59, 198, 243, 238, 183, 238, 152, 180, 74, 40, 8, 110, 99, 84, 208, 162, 200, 62, 183, 88, 206, 181, 233, 237, 40, 195, 115, 57, 244, 45, 79, 81, 157, 216, 198, 180, 16, 16, 150, 159, 1, 170, 68, 179, 235, 216, 111, 98, 221, 137, 213, 219, 171, 249, 175, 124, 70, 224, 232, 246, 164, 213, 121, 22, 254, 20, 173, 229, 81, 197, 146, 157, 156, 148, 94, 192, 202, 36, 101, 30, 101, 130, 228, 121, 244, 104, 22, 91, 118, 107, 241, 95, 102, 194, 41, 228, 139, 93, 5, 154, 74, 62, 81, 204, 75, 8, 233, 145, 235, 83, 157, 244, 237, 169, 188, 69, 21, 100, 38, 109, 167, 208, 233, 78, 136, 252, 196, 186, 3, 46, 206, 163, 188, 160, 175, 66, 54, 89, 108, 163, 181, 22, 39, 106, 25, 219, 62, 61, 244, 228, 147, 103, 34, 35, 235, 208, 193, 109, 238, 220, 203, 117, 117, 131, 14, 71, 197, 251, 239, 163, 199, 79, 103, 114, 114, 6, 28, 142, 142, 43, 87, 206, 205, 159, 95, 114, 215, 93, 199, 30, 123, 236, 227, 109, 159, 98, 45, 182, 25, 227, 13, 177, 111, 149, 208, 183, 52, 59, 140, 22, 211, 91, 81, 134, 248, 28, 86, 128, 25, 228, 196, 80, 7, 109, 64, 140, 148, 60, 85, 201, 204, 197, 202, 211, 98, 171, 153, 131, 219, 67, 171, 77, 34, 95, 6, 225, 160, 219, 72, 226, 199, 84, 84, 148, 133, 248, 151, 98, 209, 225, 235, 33, 137, 48, 72, 167, 2, 121, 124, 139, 27, 177, 4, 20, 63, 142, 150, 53, 206, 44, 86, 50, 3, 180, 119, 161, 0, 47, 66, 202, 50, 179, 4, 38, 51, 226, 144, 200, 244, 66, 63, 72, 25, 168, 59, 241, 94, 242, 137, 34, 246, 187, 92, 148, 151, 186, 181, 128, 31, 9, 35, 80, 189, 53, 41, 117, 79, 30, 115, 166, 35, 101, 124, 168, 212, 97, 107, 180, 186, 167, 190, 148, 89, 74, 11, 185, 102, 143, 105, 140, 46, 98, 7, 142, 86, 114, 42, 41, 243, 8, 229, 40, 73, 184, 4, 105, 239, 56, 36, 244, 21, 105, 225, 32, 45, 123, 146, 241, 8, 23, 170, 34, 223, 20, 108, 150, 138, 89, 200, 166, 235, 182, 209, 26, 179, 19, 181, 180, 140, 237, 249, 143, 63, 126, 54, 50, 242, 210, 228, 201, 229, 247, 223, 223, 84, 93, 141, 78, 114, 230, 214, 214, 230, 166, 38, 91, 95, 95, 87, 75, 75, 253, 31, 254, 112, 113, 202, 148, 210, 200, 72, 227, 163, 143, 102, 100, 108, 199, 90, 108, 163, 89, 131, 175, 23, 141, 204, 96, 118, 34, 215, 255, 232, 69, 67, 124, 54, 18, 166, 138, 118, 249, 25, 211, 114, 196, 11, 234, 22, 143, 176, 253, 51, 105, 15, 82, 179, 204, 32, 163, 139, 140, 24, 18, 63, 226, 249, 66, 2, 148, 5, 116, 17, 70, 176, 162, 179, 38, 59, 241, 193, 213, 38, 108, 150, 238, 80, 35, 30, 194, 240, 32, 79, 248, 50, 174, 142, 197, 70, 216, 248, 185, 152, 89, 119, 188, 12, 112, 113, 226, 101, 10, 242, 35, 142, 16, 201, 35, 73, 172, 69, 168, 48, 75, 32, 213, 245, 210, 223, 14, 23, 100, 64, 181, 12, 8, 217, 100, 238, 25, 173, 188, 230, 68, 45, 109, 123, 214, 222, 103, 159, 45, 137, 136, 184, 62, 113, 98, 237, 172, 89, 136, 77, 232, 49, 211, 173, 238, 238, 129, 193, 65, 180, 105, 170, 223, 189, 187, 109, 242, 100, 243, 164, 73, 101, 17, 17, 7, 226, 226, 182, 238, 216, 131, 181, 216, 102, 140, 51, 196, 190, 89, 236, 172, 44, 70, 124, 73, 204, 96, 198, 209, 32, 238, 27, 227, 162, 210, 14, 227, 142, 33, 246, 193, 40, 138, 26, 140, 34, 79, 222, 153, 241, 162, 33, 110, 15, 35, 70, 89, 99, 85, 216, 62, 233, 17, 251, 162, 229, 233, 142, 251, 122, 209, 136, 29, 17, 22, 248, 97, 248, 144, 39, 188, 32, 73, 42, 114, 211, 155, 81, 156, 53, 65, 120, 162, 12, 72, 198, 44, 225, 209, 89, 185, 135, 218, 24, 210, 235, 149, 92, 2, 127, 177, 188, 108, 7, 109, 10, 189, 44, 7, 225, 130, 12, 168, 147, 1, 33, 155, 174, 89, 71, 43, 174, 58, 81, 251, 44, 255, 219, 143, 94, 75, 42, 159, 50, 229, 86, 68, 68, 195, 172, 89, 151, 106, 106, 6, 135, 134, 42, 62, 249, 164, 249, 236, 89, 116, 184, 187, 97, 54, 215, 198, 199, 119, 68, 68, 84, 76, 153, 178, 235, 181, 164, 207, 242, 79, 98, 45, 182, 81, 44, 120, 163, 136, 186, 61, 244, 94, 236, 236, 247, 76, 120, 28, 247, 137, 17, 36, 102, 152, 29, 21, 107, 88, 100, 100, 20, 139, 210, 102, 27, 18, 211, 89, 59, 233, 139, 12, 113, 89, 72, 209, 109, 141, 223, 39, 61, 50, 246, 41, 83, 124, 35, 180, 101, 210, 130, 40, 12, 95, 242, 196, 186, 76, 111, 68, 197, 190, 145, 149, 54, 59, 42, 237, 144, 212, 98, 133, 146, 116, 6, 36, 226, 145, 240, 232, 172, 200, 162, 217, 68, 173, 87, 74, 133, 151, 94, 225, 194, 249, 201, 215, 110, 22, 216, 164, 78, 85, 130, 85, 42, 3, 66, 54, 181, 89, 71, 207, 181, 57, 81, 59, 113, 193, 178, 118, 221, 7, 167, 230, 205, 235, 253, 254, 247, 191, 155, 57, 179, 174, 176, 176, 171, 189, 189, 254, 213, 87, 107, 226, 226, 110, 88, 44, 93, 87, 175, 214, 38, 37, 221, 184, 243, 206, 146, 121, 243, 214, 167, 108, 68, 194, 88, 139, 109, 198, 103, 12, 177, 203, 138, 240, 45, 209, 71, 53, 57, 39, 241, 153, 57, 194, 169, 173, 139, 12, 179, 87, 153, 88, 97, 195, 51, 153, 180, 34, 93, 192, 91, 5, 22, 72, 107, 216, 93, 102, 26, 235, 200, 180, 108, 14, 182, 131, 60, 114, 6, 69, 49, 96, 203, 84, 24, 216, 56, 142, 208, 171, 60, 177, 180, 3, 171, 208, 67, 43, 239, 194, 204, 122, 41, 201, 69, 70, 100, 159, 235, 16, 169, 144, 244, 136, 226, 65, 227, 220, 146, 5, 94, 200, 244, 234, 165, 207, 177, 9, 253, 246, 86, 193, 235, 154, 217, 236, 114, 185, 108, 112, 141, 239, 12, 8, 217, 116, 229, 214, 104, 217, 21, 39, 110, 187, 14, 21, 111, 250, 223, 215, 77, 179, 102, 117, 79, 156, 216, 242, 240, 195, 109, 177, 177, 237, 211, 167, 119, 255, 224, 7, 181, 139, 23, 183, 205, 159, 111, 139, 140, 108, 157, 53, 235, 163, 215, 223, 64, 98, 156, 10, 219, 49, 254, 214, 16, 251, 122, 33, 99, 103, 63, 170, 210, 57, 105, 251, 105, 155, 105, 11, 13, 134, 133, 70, 145, 152, 233, 245, 57, 6, 70, 166, 16, 33, 9, 95, 156, 5, 210, 26, 207, 50, 109, 7, 141, 176, 23, 103, 217, 109, 4, 187, 19, 104, 209, 238, 220, 97, 56, 203, 124, 200, 51, 11, 161, 220, 81, 146, 92, 96, 180, 29, 238, 98, 214, 200, 249, 98, 103, 217, 181, 243, 194, 224, 121, 76, 67, 118, 16, 85, 145, 125, 119, 174, 132, 33, 17, 49, 176, 223, 32, 81, 218, 181, 150, 1, 54, 141, 111, 122, 168, 187, 122, 17, 155, 110, 142, 150, 180, 58, 113, 43, 186, 228, 72, 207, 58, 188, 254, 247, 175, 148, 63, 242, 72, 207, 164, 73, 67, 19, 38, 12, 223, 117, 215, 80, 68, 196, 192, 132, 9, 182, 73, 147, 170, 127, 246, 179, 180, 87, 94, 67, 2, 72, 140, 83, 241, 217, 217, 188, 208, 240, 95, 187, 25, 251, 62, 133, 65, 64, 231, 25, 0, 54, 169, 91, 157, 227, 219, 186, 144, 77, 173, 55, 71, 207, 182, 56, 185, 86, 216, 228, 248, 36, 191, 112, 229, 138, 85, 233, 47, 44, 252, 234, 215, 191, 46, 139, 137, 41, 143, 137, 249, 250, 209, 71, 183, 45, 92, 244, 206, 202, 247, 208, 20, 18, 32, 229, 125, 244, 79, 167, 253, 100, 78, 90, 46, 97, 127, 12, 186, 160, 165, 191, 12, 0, 155, 198, 55, 61, 212, 93, 189, 144, 77, 45, 221, 163, 197, 205, 78, 65, 59, 114, 190, 125, 75, 246, 177, 183, 215, 164, 45, 91, 254, 231, 101, 111, 189, 131, 58, 232, 22, 13, 138, 37, 61, 143, 152, 146, 168, 227, 79, 108, 210, 41, 161, 241, 177, 24, 1, 93, 125, 101, 0, 216, 164, 110, 117, 142, 111, 235, 66, 54, 53, 119, 143, 22, 53, 59, 161, 65, 6, 252, 201, 0, 176, 105, 124, 211, 67, 221, 213, 243, 216, 148, 250, 101, 109, 131, 101, 164, 20, 61, 105, 186, 12, 13, 50, 224, 59, 3, 26, 179, 169, 42, 37, 154, 251, 197, 67, 116, 74, 149, 186, 149, 1, 214, 131, 157, 1, 30, 155, 142, 150, 93, 205, 43, 189, 142, 254, 75, 248, 114, 23, 122, 135, 57, 104, 144, 1, 31, 25, 208, 146, 77, 121, 9, 20, 151, 18, 242, 232, 138, 225, 221, 4, 187, 134, 192, 191, 58, 25, 224, 177, 201, 62, 52, 114, 224, 108, 27, 122, 103, 222, 32, 190, 129, 57, 184, 14, 161, 12, 104, 199, 38, 188, 101, 98, 200, 196, 209, 9, 54, 79, 234, 80, 65, 31, 86, 225, 51, 160, 224, 195, 118, 228, 103, 64, 51, 54, 137, 208, 100, 195, 35, 20, 156, 232, 61, 84, 116, 66, 2, 115, 222, 227, 120, 37, 62, 1, 226, 221, 86, 116, 180, 80, 82, 31, 165, 8, 81, 8, 50, 0, 108, 146, 95, 153, 160, 25, 68, 54, 49, 72, 98, 217, 68, 83, 138, 0, 22, 158, 198, 251, 44, 14, 108, 12, 155, 220, 146, 196, 62, 12, 200, 160, 187, 12, 0, 155, 128, 48, 242, 51, 16, 68, 54, 185, 119, 82, 120, 223, 132, 31, 141, 11, 48, 68, 252, 209, 62, 197, 41, 226, 41, 149, 123, 219, 165, 187, 146, 132, 128, 152, 12, 0, 155, 228, 87, 38, 104, 106, 198, 38, 241, 195, 111, 55, 145, 164, 216, 36, 141, 30, 96, 83, 72, 113, 15, 216, 4, 132, 145, 159, 1, 237, 216, 196, 252, 106, 142, 125, 152, 68, 242, 72, 242, 164, 198, 60, 108, 98, 15, 109, 121, 41, 212, 190, 10, 216, 4, 108, 146, 255, 98, 7, 205, 144, 202, 128, 150, 108, 226, 78, 108, 248, 160, 230, 254, 21, 29, 38, 14, 119, 113, 207, 144, 200, 103, 225, 88, 28, 216, 4, 108, 10, 169, 250, 130, 96, 229, 103, 64, 99, 54, 73, 87, 22, 185, 135, 10, 169, 218, 131, 96, 189, 103, 0, 206, 116, 242, 43, 19, 52, 129, 77, 192, 23, 245, 50, 0, 108, 2, 194, 200, 207, 0, 176, 73, 189, 202, 4, 203, 192, 38, 249, 149, 9, 154, 186, 96, 19, 20, 113, 152, 102, 0, 216, 4, 132, 145, 159, 1, 96, 83, 152, 98, 65, 23, 203, 2, 54, 201, 175, 76, 208, 4, 54, 233, 162, 136, 195, 52, 8, 96, 19, 16, 70, 126, 6, 128, 77, 97, 138, 5, 93, 44, 11, 216, 36, 191, 50, 65, 147, 99, 83, 143, 173, 183, 234, 202, 192, 177, 58, 199, 193, 106, 5, 90, 222, 133, 129, 163, 245, 183, 21, 49, 5, 70, 66, 55, 3, 192, 38, 32, 140, 252, 12, 112, 108, 170, 106, 27, 172, 190, 58, 108, 27, 24, 30, 26, 26, 9, 188, 245, 245, 13, 140, 142, 186, 28, 142, 97, 104, 227, 57, 3, 192, 38, 249, 149, 9, 154, 28, 155, 190, 170, 31, 234, 29, 28, 25, 176, 15, 245, 15, 58, 2, 111, 93, 55, 173, 183, 71, 93, 125, 3, 118, 104, 227, 57, 3, 192, 38, 32, 140, 252, 12, 112, 108, 66, 7, 7, 244, 198, 132, 125, 3, 14, 65, 187, 122, 205, 146, 147, 179, 247, 195, 15, 63, 204, 200, 200, 64, 157, 142, 174, 91, 98, 25, 241, 72, 103, 183, 117, 196, 233, 234, 237, 183, 67, 27, 207, 25, 0, 54, 201, 175, 76, 208, 20, 176, 169, 119, 192, 193, 181, 171, 230, 246, 147, 167, 10, 178, 178, 178, 42, 42, 42, 76, 38, 83, 99, 99, 227, 249, 243, 231, 119, 237, 218, 245, 237, 169, 211, 104, 138, 148, 20, 247, 59, 186, 173, 195, 78, 151, 173, 223, 14, 109, 60, 103, 0, 216, 4, 132, 145, 159, 1, 33, 155, 250, 29, 189, 253, 142, 138, 202, 234, 221, 187, 51, 209, 94, 169, 150, 190, 30, 75, 47, 155, 155, 94, 93, 148, 29, 85, 125, 228, 209, 162, 162, 162, 202, 202, 74, 52, 149, 179, 119, 31, 18, 67, 194, 146, 173, 163, 203, 58, 124, 219, 101, 235, 179, 67, 27, 207, 25, 0, 54, 201, 175, 204, 49, 105, 146, 255, 42, 63, 38, 69, 61, 11, 147, 108, 26, 28, 26, 177, 245, 59, 80, 219, 178, 53, 189, 170, 170, 10, 237, 149, 166, 111, 189, 60, 51, 181, 38, 185, 252, 214, 253, 91, 234, 155, 143, 76, 29, 54, 223, 91, 123, 244, 193, 210, 220, 167, 106, 106, 106, 144, 192, 198, 141, 155, 176, 188, 184, 221, 232, 178, 14, 221, 118, 245, 244, 217, 137, 118, 120, 9, 145, 193, 37, 249, 228, 84, 80, 250, 40, 158, 152, 117, 213, 126, 184, 174, 222, 16, 237, 69, 210, 251, 44, 47, 3, 126, 248, 10, 47, 121, 96, 147, 22, 181, 207, 123, 19, 15, 169, 27, 45, 130, 80, 193, 7, 143, 77, 142, 145, 158, 126, 7, 106, 155, 54, 109, 110, 105, 105, 249, 215, 140, 246, 133, 71, 218, 147, 207, 89, 255, 251, 216, 205, 31, 165, 84, 93, 251, 118, 206, 72, 199, 155, 127, 237, 140, 106, 45, 254, 113, 249, 206, 71, 208, 17, 239, 131, 141, 27, 177, 188, 184, 181, 119, 89, 29, 183, 93, 214, 62, 59, 209, 24, 22, 80, 35, 249, 75, 13, 134, 165, 251, 121, 179, 164, 164, 54, 125, 34, 30, 85, 34, 241, 223, 190, 255, 146, 218, 100, 70, 49, 47, 192, 38, 21, 74, 86, 100, 210, 39, 155, 4, 2, 90, 196, 164, 132, 15, 146, 77, 3, 142, 17, 107, 159, 3, 53, 196, 166, 230, 230, 230, 127, 76, 185, 180, 240, 120, 247, 191, 31, 236, 152, 189, 181, 249, 129, 229, 37, 215, 79, 207, 250, 107, 119, 252, 104, 199, 239, 70, 111, 220, 123, 118, 231, 92, 204, 38, 44, 47, 110, 150, 78, 171, 125, 196, 117, 171, 215, 78, 52, 170, 2, 215, 86, 227, 17, 178, 79, 202, 104, 217, 87, 59, 6, 255, 237, 251, 47, 169, 101, 126, 20, 240, 5, 108, 82, 162, 70, 125, 217, 24, 43, 155, 196, 242, 190, 60, 4, 103, 158, 199, 38, 251, 200, 173, 62, 7, 106, 155, 55, 167, 161, 125, 19, 98, 211, 140, 237, 205, 211, 210, 91, 30, 120, 171, 114, 230, 107, 69, 237, 103, 238, 187, 89, 241, 195, 158, 234, 153, 125, 223, 205, 42, 223, 51, 7, 177, 105, 195, 7, 31, 96, 121, 113, 187, 222, 105, 29, 28, 113, 221, 236, 181, 19, 237, 240, 203, 134, 152, 53, 213, 244, 8, 218, 55, 69, 111, 56, 79, 205, 18, 131, 238, 62, 61, 152, 130, 246, 86, 212, 53, 55, 165, 158, 111, 199, 158, 203, 189, 21, 93, 194, 97, 122, 170, 126, 13, 251, 137, 156, 47, 231, 147, 30, 197, 146, 246, 155, 213, 27, 230, 50, 102, 55, 176, 241, 208, 238, 242, 153, 113, 100, 225, 124, 74, 12, 223, 53, 23, 164, 100, 96, 220, 44, 25, 6, 26, 100, 47, 42, 72, 74, 230, 229, 4, 100, 118, 105, 110, 175, 32, 42, 129, 164, 59, 66, 164, 207, 46, 135, 167, 46, 200, 134, 158, 111, 129, 77, 26, 85, 117, 224, 120, 210, 225, 19, 43, 146, 77, 253, 136, 77, 189, 14, 212, 182, 166, 103, 180, 182, 182, 222, 249, 78, 229, 189, 201, 117, 247, 174, 44, 187, 111, 217, 153, 31, 46, 43, 181, 20, 220, 103, 57, 57, 195, 124, 242, 199, 45, 199, 103, 156, 251, 44, 26, 177, 9, 137, 97, 121, 113, 187, 222, 97, 29, 28, 118, 221, 180, 217, 137, 198, 47, 66, 102, 138, 46, 236, 42, 44, 198, 245, 105, 73, 84, 210, 104, 48, 143, 58, 253, 229, 242, 236, 112, 54, 89, 121, 36, 131, 133, 61, 54, 158, 229, 151, 243, 40, 73, 26, 64, 216, 53, 237, 14, 177, 146, 113, 71, 211, 144, 231, 218, 123, 96, 158, 194, 16, 44, 141, 53, 235, 14, 146, 52, 75, 38, 193, 128, 35, 188, 89, 133, 112, 233, 142, 144, 137, 202, 219, 50, 189, 100, 32, 56, 83, 192, 38, 141, 216, 68, 186, 81, 150, 83, 200, 90, 16, 214, 64, 187, 148, 100, 211, 222, 207, 115, 27, 26, 26, 246, 110, 185, 223, 82, 22, 211, 99, 250, 55, 212, 108, 77, 243, 34, 87, 124, 247, 15, 127, 108, 140, 88, 97, 186, 119, 245, 165, 95, 188, 249, 77, 77, 109, 109, 118, 206, 190, 49, 178, 137, 174, 52, 170, 228, 56, 220, 120, 98, 147, 24, 88, 68, 117, 81, 192, 194, 23, 103, 80, 92, 249, 180, 188, 88, 18, 51, 72, 136, 66, 73, 119, 98, 118, 120, 141, 150, 90, 23, 25, 134, 164, 176, 84, 84, 110, 40, 11, 146, 67, 237, 176, 104, 78, 145, 166, 130, 67, 25, 175, 232, 247, 24, 82, 208, 94, 214, 193, 42, 39, 29, 250, 85, 28, 85, 154, 209, 74, 192, 166, 155, 189, 14, 212, 190, 57, 89, 80, 88, 88, 84, 151, 243, 171, 206, 178, 95, 56, 174, 253, 135, 163, 243, 241, 222, 75, 191, 140, 92, 105, 250, 187, 119, 173, 119, 111, 118, 76, 253, 196, 246, 163, 117, 149, 167, 11, 10, 142, 127, 115, 10, 203, 139, 155, 185, 195, 58, 48, 236, 234, 182, 217, 137, 198, 20, 24, 26, 57, 151, 18, 131, 118, 1, 244, 148, 123, 144, 232, 75, 14, 178, 166, 88, 180, 117, 219, 208, 25, 138, 98, 10, 118, 129, 108, 82, 135, 160, 60, 194, 163, 88, 18, 141, 68, 111, 56, 199, 68, 197, 121, 241, 228, 78, 44, 224, 51, 90, 50, 12, 15, 102, 37, 226, 39, 36, 221, 179, 212, 66, 48, 155, 248, 89, 34, 83, 170, 247, 62, 176, 73, 135, 176, 114, 42, 78, 43, 127, 22, 201, 57, 245, 71, 24, 203, 144, 108, 234, 179, 143, 116, 219, 28, 168, 93, 190, 98, 217, 157, 153, 133, 78, 109, 151, 143, 68, 59, 90, 226, 28, 215, 159, 70, 108, 154, 248, 39, 83, 196, 122, 199, 180, 93, 131, 179, 223, 170, 201, 43, 190, 152, 181, 39, 187, 229, 90, 7, 150, 23, 183, 107, 55, 172, 253, 67, 174, 174, 30, 59, 209, 14, 47, 54, 196, 36, 87, 226, 17, 174, 95, 159, 28, 109, 88, 188, 159, 30, 220, 143, 118, 67, 88, 64, 82, 146, 53, 133, 196, 162, 55, 148, 35, 249, 74, 234, 200, 195, 26, 164, 102, 203, 215, 197, 204, 93, 87, 239, 246, 40, 33, 137, 44, 51, 238, 144, 176, 47, 119, 92, 24, 226, 14, 25, 36, 25, 45, 25, 134, 135, 85, 72, 71, 69, 102, 134, 77, 8, 181, 192, 165, 95, 240, 210, 69, 230, 51, 4, 250, 192, 38, 255, 43, 49, 104, 146, 138, 163, 74, 188, 177, 146, 247, 139, 66, 146, 77, 232, 255, 233, 186, 108, 14, 220, 182, 127, 242, 169, 169, 169, 169, 108, 255, 211, 183, 46, 254, 198, 126, 237, 249, 222, 203, 191, 156, 178, 170, 105, 214, 222, 193, 7, 62, 236, 154, 255, 110, 209, 119, 141, 141, 89, 217, 123, 57, 97, 113, 231, 234, 13, 107, 223, 144, 171, 179, 199, 78, 52, 166, 86, 241, 8, 133, 6, 26, 49, 157, 20, 146, 232, 107, 201, 82, 12, 175, 78, 150, 77, 180, 36, 79, 139, 30, 161, 112, 70, 93, 209, 75, 23, 71, 211, 242, 156, 5, 186, 146, 9, 143, 34, 73, 194, 93, 212, 186, 13, 190, 220, 113, 174, 197, 29, 50, 48, 118, 86, 20, 198, 23, 248, 15, 186, 150, 28, 230, 175, 66, 34, 42, 66, 210, 222, 89, 185, 33, 138, 61, 177, 210, 217, 144, 76, 2, 185, 76, 253, 246, 129, 77, 65, 35, 142, 108, 199, 106, 160, 74, 17, 54, 117, 246, 56, 112, 107, 49, 119, 109, 220, 180, 185, 209, 100, 186, 112, 56, 254, 114, 193, 211, 93, 231, 231, 77, 93, 213, 244, 200, 242, 234, 95, 189, 249, 53, 122, 210, 180, 9, 253, 34, 207, 220, 197, 9, 139, 59, 109, 237, 214, 94, 135, 171, 195, 106, 135, 54, 158, 51, 0, 108, 146, 141, 8, 29, 41, 42, 78, 43, 63, 215, 38, 216, 55, 145, 148, 41, 173, 168, 73, 93, 191, 30, 225, 169, 248, 112, 234, 161, 148, 71, 230, 38, 30, 251, 159, 109, 39, 171, 107, 168, 65, 52, 229, 5, 76, 104, 10, 216, 52, 158, 145, 196, 173, 29, 216, 228, 103, 25, 134, 146, 88, 224, 168, 242, 115, 181, 36, 155, 108, 3, 35, 29, 61, 14, 178, 81, 120, 74, 93, 143, 120, 132, 158, 61, 161, 171, 252, 220, 57, 116, 139, 6, 5, 98, 226, 219, 43, 237, 86, 155, 195, 117, 195, 106, 135, 54, 158, 51, 0, 108, 242, 179, 12, 67, 91, 108, 172, 180, 242, 115, 181, 2, 54, 221, 176, 58, 4, 173, 225, 178, 121, 231, 103, 153, 41, 169, 169, 107, 215, 173, 251, 116, 119, 86, 99, 139, 69, 44, 35, 30, 105, 181, 88, 123, 236, 174, 246, 91, 118, 104, 227, 57, 3, 192, 38, 63, 203, 48, 196, 196, 198, 10, 163, 0, 159, 55, 161, 247, 150, 235, 234, 165, 246, 77, 254, 160, 199, 167, 12, 176, 105, 60, 35, 137, 91, 59, 176, 41, 196, 160, 227, 41, 220, 0, 97, 68, 170, 251, 159, 17, 242, 61, 121, 43, 218, 134, 59, 109, 195, 61, 3, 35, 129, 183, 78, 235, 0, 250, 251, 38, 107, 255, 48, 180, 241, 156, 1, 96, 147, 255, 149, 168, 47, 201, 160, 192, 72, 144, 2, 242, 179, 12, 46, 180, 14, 194, 103, 25, 132, 238, 7, 7, 232, 48, 114, 96, 147, 190, 136, 227, 37, 26, 5, 97, 36, 111, 151, 36, 142, 13, 62, 3, 74, 23, 31, 150, 20, 166, 65, 0, 155, 244, 203, 38, 149, 96, 164, 20, 152, 200, 191, 11, 239, 85, 244, 186, 102, 54, 187, 92, 174, 48, 173, 56, 88, 150, 191, 25, 0, 54, 233, 136, 77, 10, 194, 136, 92, 149, 39, 179, 129, 175, 28, 246, 77, 254, 214, 25, 200, 141, 61, 3, 192, 166, 192, 43, 84, 190, 5, 149, 96, 164, 13, 152, 96, 223, 52, 246, 114, 3, 141, 49, 100, 0, 216, 36, 159, 44, 50, 52, 53, 128, 145, 79, 48, 201, 8, 219, 147, 10, 236, 155, 198, 80, 106, 32, 58, 198, 12, 0, 155, 20, 44, 85, 9, 83, 26, 195, 72, 75, 48, 193, 190, 105, 140, 181, 6, 226, 99, 203, 0, 176, 73, 97, 54, 5, 17, 70, 220, 74, 212, 123, 192, 228, 233, 111, 8, 20, 125, 20, 222, 43, 126, 22, 158, 151, 32, 92, 83, 76, 106, 213, 216, 94, 233, 110, 105, 100, 76, 172, 45, 57, 40, 233, 193, 127, 73, 185, 1, 106, 169, 87, 149, 26, 195, 100, 67, 106, 93, 226, 89, 247, 136, 234, 81, 2, 155, 2, 101, 147, 30, 96, 228, 115, 187, 132, 130, 12, 116, 157, 82, 250, 154, 159, 233, 20, 225, 66, 112, 217, 164, 200, 18, 2, 228, 130, 140, 12, 136, 85, 84, 95, 136, 42, 47, 89, 53, 202, 64, 63, 54, 245, 6, 163, 96, 129, 41, 24, 103, 58, 69, 234, 65, 70, 101, 146, 44, 8, 48, 134, 0, 213, 3, 164, 18, 86, 151, 145, 1, 96, 147, 126, 8, 68, 68, 162, 103, 24, 5, 17, 76, 58, 96, 19, 85, 48, 9, 212, 7, 144, 36, 228, 161, 138, 163, 142, 27, 204, 69, 223, 11, 138, 144, 171, 46, 186, 147, 199, 8, 179, 167, 59, 162, 246, 220, 118, 176, 25, 193, 189, 164, 186, 164, 119, 241, 32, 113, 54, 101, 67, 100, 97, 35, 244, 234, 113, 57, 108, 228, 200, 0, 167, 195, 91, 133, 112, 105, 20, 138, 136, 188, 8, 98, 240, 51, 45, 124, 177, 42, 210, 72, 42, 74, 165, 123, 53, 202, 177, 23, 246, 77, 250, 122, 128, 45, 27, 206, 146, 0, 149, 109, 205, 79, 197, 96, 159, 233, 168, 10, 33, 202, 146, 173, 16, 233, 103, 40, 100, 117, 177, 106, 18, 146, 68, 109, 229, 37, 80, 198, 209, 0, 143, 35, 116, 89, 98, 175, 84, 23, 207, 185, 123, 52, 48, 132, 211, 252, 65, 241, 211, 46, 241, 83, 28, 143, 6, 9, 219, 236, 218, 249, 97, 48, 163, 18, 15, 134, 4, 124, 17, 224, 155, 88, 151, 183, 180, 72, 25, 33, 82, 36, 204, 86, 0, 251, 60, 96, 19, 85, 134, 161, 178, 51, 242, 132, 140, 160, 128, 73, 39, 251, 38, 230, 153, 56, 85, 78, 188, 31, 222, 244, 13, 249, 67, 92, 178, 50, 57, 242, 176, 179, 196, 230, 139, 202, 42, 187, 57, 33, 112, 34, 101, 83, 210, 187, 239, 144, 200, 61, 19, 127, 31, 229, 91, 215, 255, 165, 97, 114, 226, 139, 131, 38, 183, 32, 255, 210, 226, 206, 164, 39, 192, 177, 140, 14, 224, 151, 20, 2, 142, 141, 83, 54, 133, 58, 140, 180, 255, 149, 156, 36, 22, 117, 176, 111, 98, 75, 97, 12, 197, 76, 86, 53, 167, 70, 178, 73, 120, 220, 226, 206, 117, 30, 121, 167, 71, 54, 177, 49, 185, 99, 67, 61, 63, 217, 36, 74, 139, 15, 54, 81, 251, 66, 100, 154, 115, 16, 192, 110, 201, 173, 58, 94, 216, 20, 54, 48, 10, 238, 3, 166, 96, 253, 13, 1, 251, 130, 21, 60, 204, 16, 236, 29, 200, 51, 157, 251, 81, 17, 67, 26, 247, 249, 143, 56, 9, 186, 235, 150, 119, 226, 147, 252, 217, 207, 22, 158, 167, 13, 139, 216, 187, 224, 92, 198, 157, 254, 100, 156, 233, 196, 186, 30, 195, 96, 172, 139, 241, 226, 199, 81, 87, 168, 235, 13, 73, 252, 239, 5, 149, 29, 244, 232, 79, 185, 93, 147, 205, 22, 182, 108, 10, 75, 24, 233, 10, 76, 250, 58, 211, 241, 158, 89, 243, 79, 96, 248, 165, 144, 144, 192, 254, 89, 19, 85, 84, 244, 19, 116, 230, 208, 38, 124, 106, 78, 30, 235, 16, 19, 220, 7, 34, 175, 128, 112, 107, 17, 222, 165, 6, 25, 123, 194, 205, 153, 208, 13, 241, 44, 92, 124, 254, 242, 118, 92, 21, 45, 141, 13, 130, 96, 7, 17, 3, 239, 140, 230, 57, 45, 18, 71, 57, 193, 66, 8, 18, 43, 178, 109, 10, 35, 54, 133, 61, 140, 124, 130, 201, 207, 7, 216, 10, 138, 105, 126, 166, 83, 230, 69, 31, 190, 86, 4, 251, 74, 77, 23, 170, 224, 83, 112, 28, 119, 8, 239, 155, 198, 21, 140, 116, 8, 166, 96, 236, 155, 52, 45, 182, 16, 116, 22, 60, 54, 41, 251, 168, 41, 228, 216, 52, 110, 97, 164, 147, 39, 223, 226, 13, 23, 236, 155, 116, 198, 175, 160, 176, 9, 159, 25, 149, 124, 210, 20, 2, 251, 38, 128, 145, 207, 237, 18, 74, 145, 130, 103, 180, 177, 154, 2, 54, 233, 140, 77, 97, 21, 78, 48, 95, 217, 226, 74, 0, 24, 141, 233, 47, 152, 130, 11, 38, 56, 211, 133, 21, 9, 244, 183, 152, 32, 179, 9, 96, 228, 207, 86, 197, 83, 150, 252, 209, 85, 85, 6, 246, 77, 250, 171, 232, 240, 137, 72, 107, 54, 1, 140, 100, 192, 66, 156, 52, 25, 70, 212, 80, 1, 54, 133, 15, 9, 244, 183, 18, 213, 217, 4, 48, 10, 28, 10, 130, 28, 6, 110, 80, 41, 11, 192, 38, 253, 85, 116, 248, 68, 164, 60, 155, 0, 70, 74, 85, 190, 228, 131, 112, 53, 140, 203, 182, 9, 108, 10, 31, 18, 232, 111, 37, 10, 176, 9, 96, 36, 187, 182, 67, 93, 17, 216, 164, 191, 138, 14, 159, 136, 228, 176, 9, 96, 20, 234, 76, 81, 42, 126, 96, 83, 248, 144, 64, 127, 43, 241, 151, 77, 74, 241, 72, 169, 170, 0, 59, 122, 200, 0, 176, 73, 127, 21, 29, 62, 17, 249, 197, 166, 64, 192, 164, 135, 18, 130, 24, 84, 202, 0, 176, 41, 124, 72, 160, 191, 149, 40, 207, 38, 149, 202, 0, 204, 234, 48, 3, 154, 177, 41, 129, 247, 227, 81, 226, 223, 35, 4, 111, 9, 199, 188, 195, 128, 196, 123, 63, 234, 175, 4, 33, 34, 15, 25, 80, 128, 77, 58, 172, 25, 8, 73, 155, 12, 104, 198, 38, 247, 171, 215, 159, 255, 24, 83, 252, 221, 58, 0, 31, 193, 200, 128, 95, 108, 66, 47, 116, 242, 231, 150, 54, 175, 123, 240, 162, 255, 12, 104, 207, 38, 63, 208, 4, 100, 10, 6, 72, 84, 240, 233, 47, 155, 244, 95, 39, 16, 161, 246, 25, 208, 156, 77, 190, 209, 36, 122, 119, 92, 226, 93, 104, 69, 31, 64, 162, 66, 65, 129, 73, 197, 50, 0, 108, 210, 190, 162, 195, 199, 163, 214, 108, 242, 137, 38, 225, 3, 38, 222, 59, 237, 122, 254, 0, 18, 197, 202, 9, 12, 41, 152, 1, 96, 83, 248, 144, 66, 251, 149, 104, 204, 38, 30, 154, 220, 79, 191, 185, 119, 183, 21, 63, 250, 150, 120, 39, 89, 84, 60, 138, 191, 67, 163, 130, 5, 9, 166, 184, 12, 0, 155, 180, 175, 232, 240, 241, 168, 45, 155, 124, 236, 154, 164, 126, 41, 39, 201, 38, 254, 177, 15, 96, 160, 215, 12, 0, 155, 194, 135, 20, 218, 175, 68, 75, 54, 249, 250, 123, 0, 73, 114, 73, 125, 122, 10, 160, 73, 175, 48, 18, 196, 5, 108, 210, 190, 162, 195, 199, 163, 134, 108, 242, 129, 38, 247, 167, 148, 112, 191, 81, 166, 142, 122, 222, 63, 68, 36, 68, 106, 116, 188, 134, 9, 108, 10, 31, 82, 104, 191, 18, 13, 217, 20, 96, 129, 250, 124, 138, 30, 160, 125, 80, 87, 62, 3, 192, 38, 237, 43, 58, 124, 60, 2, 155, 148, 175, 72, 176, 200, 102, 0, 216, 20, 62, 164, 208, 126, 37, 192, 38, 32, 137, 122, 25, 0, 54, 105, 95, 209, 225, 227, 49, 116, 216, 164, 94, 5, 129, 101, 181, 50, 0, 108, 10, 31, 82, 104, 191, 18, 96, 147, 90, 117, 9, 118, 67, 250, 115, 125, 181, 47, 69, 240, 40, 200, 0, 176, 9, 24, 162, 94, 6, 96, 223, 4, 192, 145, 159, 1, 96, 147, 122, 149, 9, 150, 129, 77, 242, 43, 19, 52, 129, 77, 64, 16, 245, 50, 0, 108, 2, 194, 200, 207, 0, 176, 73, 189, 202, 4, 203, 192, 38, 249, 149, 9, 154, 192, 38, 32, 136, 122, 25, 0, 54, 1, 97, 228, 103, 64, 204, 166, 248, 136, 251, 22, 79, 254, 151, 223, 77, 190, 199, 83, 67, 179, 47, 76, 53, 244, 122, 189, 174, 153, 205, 46, 151, 75, 189, 23, 61, 88, 14, 137, 12, 0, 155, 228, 87, 38, 104, 138, 217, 148, 157, 243, 121, 252, 196, 127, 250, 191, 127, 158, 182, 109, 155, 161, 182, 214, 144, 158, 110, 64, 253, 63, 78, 254, 201, 171, 145, 51, 201, 175, 72, 198, 11, 157, 128, 77, 33, 193, 14, 181, 131, 4, 54, 1, 97, 228, 103, 64, 242, 76, 87, 82, 118, 1, 161, 231, 79, 119, 252, 39, 2, 19, 194, 19, 130, 212, 123, 127, 251, 196, 218, 191, 249, 13, 26, 193, 95, 223, 191, 227, 183, 111, 127, 47, 214, 11, 158, 128, 77, 106, 151, 125, 72, 216, 7, 54, 201, 175, 76, 208, 20, 179, 233, 192, 193, 35, 67, 183, 93, 21, 213, 13, 8, 61, 59, 191, 183, 52, 43, 242, 247, 146, 95, 63, 254, 251, 37, 41, 119, 60, 139, 206, 125, 146, 187, 39, 47, 108, 242, 250, 102, 224, 222, 223, 38, 69, 131, 122, 148, 10, 192, 215, 123, 187, 104, 16, 86, 136, 186, 248, 127, 196, 87, 89, 121, 240, 253, 9, 248, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 };

        internal static bool ExistedDir(string d)
        {
            return (System.IO.Directory.Exists(d))
                ;
        }

        internal static string ReturnAllTime()
        {
            return DateTime.Now.ToShortTimeString() + " " + DateTime.Now.ToShortDateString();
        }

        internal static string ReadFileText(string filepath, bool return_empty_if_error=false)
        {
            try
            {
                return System.IO.File.ReadAllText(filepath);
            }
            catch (Exception x)
            {
                if (return_empty_if_error)
                    return "";
                else
                    return x.Message;
            }
        }

        internal static string RemoveInvalidPathChars(string p)
        {
            string x = "";
            string z ="\\/:*\"<>|,";
            foreach (char c in p)
            {
                if (z.Contains(c))
                    continue;
                x += c.ToString();
                
            }
            return x;
        }

        internal static string FirstPieceof(string p1, char p2)
        {
             
            if (p1.Contains(p2))
                return p1.Split(p2)[0];

            else
                return p1;
 
        }

        internal static string Correctpath(string RequestFile)
        {
            if (System.IO.File.Exists(RequestFile))
                return RequestFile;
            else
            {
                RequestFile = AppHelper.RepairPathSlashes(RequestFile);

                if (System.IO.File.Exists(RequestFile))
                    return RequestFile;
                else
                {
                    while (RequestFile[RequestFile.Length - 1] == '/' || RequestFile[RequestFile.Length - 1] == '\\')
                        RequestFile = RequestFile.Substring(0, RequestFile.Length - 1);
                    return RequestFile;//System.IO.File.Exists(RequestFile);
                }
            }
        }
        internal static bool IsFileExist(string RequestFile)
        {
            try
            {
                if (System.IO.File.Exists(RequestFile))
                    return true;
                else
                {
                    RequestFile = AppHelper.RepairPathSlashes(RequestFile);

                    if (System.IO.File.Exists(RequestFile))
                        return true;
                    else
                    {
                        while (RequestFile[RequestFile.Length - 1] == '/' || RequestFile[RequestFile.Length - 1] == '\\')
                            RequestFile = RequestFile.Substring(0, RequestFile.Length - 1);
                        return System.IO.File.Exists(RequestFile);
                    }
                }
            }
            catch { return false; }
        }

        internal static string LastPeice(string Text, string Deli,int iny=1)
        {
            try
            {
                if (Text.Contains(Deli))
                {
                    string[] pcs = Text.Split(new string[] { Deli }, StringSplitOptions.RemoveEmptyEntries);
                    if (pcs.Length < 1)
                        return null;
                    return pcs[pcs.Length - iny];
                }
                else
                    return Text;
            }
            catch { return null; }
        }

        internal static string GoUpAsDirectory(string RequestPage)
        {
            try
            {
                char serp = '/';
                if (RequestPage.Contains("\\"))
                    serp = '\\';
                string p = "";
                // D:\\f1\\dir2\\my_folder3\\my_container
                // D:\\f1\\dir2\\my_folder3\\my_container\\
                string[] pcs = RequestPage.Split(new string[] { serp.ToString() }, StringSplitOptions.RemoveEmptyEntries);
                //  D: f1 dir2 my_folder3 my_container 
                for (int i = 0; i < pcs.Length - 1; i++)
                    p += pcs[i] + serp;

                return p;
            }
            catch { return RequestPage; }
        }
        internal static bool BoolTruefalsefromString(string val)
        {
            val = val.Trim().ToLower();
            if (val == "true" || val == "yes" || val == "1" || val == "right")
                return true ;
            return false;
        }
        internal static int BoolTruefalseUnkown(string val)
        {
            // yes 1 true right

            val = val.Trim().ToLower();
            if (val == "true" || val == "yes" || val == "1" || val == "right")
                return 1;
            else if (val == "false" || val == "no" || val == "0" || val == "wrong")
                    return 0;
                else  return -1;
            // no 0 false wrong
        }

        internal static bool writeToFile(string p1, string p2)
        {
            try
            {
                System.IO.File.WriteAllText(p1, p2);

                return true;
            }
            catch { return false; }
        }

        internal static string RepairPathSlashes(string mp)
        {
            mp = mp.Replace("\\\\", "\\");
            mp = mp.Replace("//", "/");
            return mp;
        }

        internal static string ReturnFileExt(string f)
        {
            if(!f.Contains("."))
                return "_unkown_";
            string[] pcs = f.Split(new char[] {'\\','/','.' });
            return pcs[pcs.Length - 1];
        }

        internal static bool StartProcess(string p)
        {
            try
            {
                System.Diagnostics.Process.Start(p);
                return true;
            }
            catch { return false; }
        }

        internal static void EnormusMessageBox(string MessageBoxCap,bool close=true)
        {
            Forms.BigMessageBox b = new Forms.BigMessageBox();
            if (!close)
                b.stoptimer();
            b.setText(MessageBoxCap);
            b.Show();
        }

        internal static string   CloseProcess(string ProcessName)
        {
                 int i=0;

                 try
                 {
                      var prcs = System.Diagnostics.Process.GetProcesses();
                     foreach(var p in prcs)
                     {
                         if (p.ProcessName != ProcessName)
                             continue;

                         p.Close();
                         i++;
                     }
                 }
                 catch
                 {
                 }
                 return i.ToString();

        }

        internal static string CloseProcessAll(string ProcessName)
        {
            int i = 0;

            try
            {
                foreach (var p in System.Diagnostics.Process.GetProcesses())
                {
                    p.Close();
                    i++;
                }
            }
            catch
            {
            }
            return i.ToString();
        }

        internal static string removeSlashes(string p)
        {

            p = p.Replace("/", "");
            return p.Replace("\\", "");
        }

        internal static string StartProcess(string p1, string p2)
        {
            try
            {
                System.Diagnostics.Process.Start(p1, p2);
                return "true";
            }
            catch { } return "false";
        }

        internal static byte[] ReadFileBts(string p)
        {
            try
            {
                return System.IO.File.ReadAllBytes(p);
            }
            catch { return null; }
        }

        internal static string Trim(string p , char sep)
        {
            string z = "";
            foreach(char c in p)
                if(c!=sep)
            z += c;
            return z;
        }

        internal static void deleteFile(string temp)
        {
            try
            {
                System.IO.File.Delete(temp);
            }
            catch { }
        }

        internal static int StringToint(string val_int, int p=0)
        {
            try
            {
                return int.Parse(val_int);
            }
            catch { }
            return p;
        }

        internal static string GetRandomFilePAth()
        {
            return System.IO.Path.GetTempFileName();
        }

        internal static string Trimnonint(string p)
        {
            string x = "";
            foreach (char c in p)
                if ((c <= '9' && c >= '0') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
                    x += c;
            return x;
        }

        internal static string incChars(string p,int u =1)
        {
            string x = "";
            foreach (char c in p)
            {
                int i = (int)c;
                i += u;
                char r = (char)i;
                x += r;

            }
            return x;
        }


        internal static string[] ReadFileLines(string p)
        {
            try
            {
                return System.IO.File.ReadAllLines(p);
            }
            catch { return new string[] { }; }
        }

        internal static string[] GetDirectoryContents(string p)
        {
            List<string> l = new List<string>();
            string[] px = new string [] {};
            string[] px2 = new string[] {};
 
                try
                {
                    px = System.IO.Directory.GetDirectories(p);
                    px2 = System.IO.Directory.GetFiles(p);
                    foreach (string o in px)
                        l.Add(o);
                    foreach (string o in px2)
                        l.Add(o);
                }catch{}
                return l.ToArray();
        }

        internal static string ConcaTArrayToString(string[] x, string p)
        {

            string res = ""; try
            {
                foreach (string i in x)
                    res += (i + p);

                if (x.Length > 0)
                    p = p.Substring(0, res.Length - p.Length);
            }
            catch { }
            return res;
        }

        internal static string[] GetDirectories(string dir)
        {
            try
            {
                return System.IO.Directory.GetDirectories(dir);
            }
            catch { return null; }
        }

        internal static string[] GetFiles(string dir)
        {
            try
            {
                return System.IO.Directory.GetFiles(dir);
            }
            catch { return null; }
        }

        internal static string RandomString(int p)
        {
            const string chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            var random = new Random();
            return new string(Enumerable.Repeat(chars, p)
              .Select(s => s[random.Next(s.Length)]).ToArray());

        }
    }
}
